== MORISSE Thibault
2A Info & Réseaux

== Deuxième partie du projet Ruby

Création d'un blog

== Scénarios développés

10 scénarios ont été développés :

1) Listing des posts
2) Création des posts
3) Suppression des posts
4) Affichage d'un post
5) Modification des infos d'un post
6) Listing des commentaires
7) Création des commentaires
8) Suppression des commentaires
9) Connexion au blog grâce au s_auth
10) Déconnexion

J'ai préféré couvrir plusieurs scénarios même si leur fonctionnement n'est pas optimal. En effet, dès qu'un utilisateur se connecte, ce dernier peut tout faire : son compte agit en tant qu'administrateur du blog. Il peut créer des posts, les supprimer (même si ce n'est pas lui qui l'a créé), les modifier, créer et supprimer des commentaires.
Malheureusement, ces scénarios-là n'ont pas été développés.

Par contre, l'utilisateur doit être connecté pour effectuer ces actions, sinon il ne peut pas les faire.

== Utilisation du s_auth et du blog

Pour utiliser le blog, il faut utiliser le s_auth développé précédemment.

Pour lancer le s_auth, il faut ouvrir un terminal, se positionner dans le dossier s_auth/ présent à la racine de l'archive tgz fournie, et lancer la commande suivante :
	--> ruby s_auth.rb
Une fois ceci fait, on peut lancer le serveur d'authentification grâce à l'adresse suivante dans un navigateur : http://localhost:4567
Il ne faut pas oublier de créer l'application cliente qui en l'occurence est le blog : 
	--> Nom de l'appli : appli_blog
	--> Adresse de l'appli : http://localhost:3000

Pour lancer le blog, on ouvre un second terminal, on va dans le dossier blog/ présent à la racine, et on lance la commande suivante :
	--> rails server
On peut alors ouvrir une nouvelle fenêtre dans le navigateur avec l'adresse suivante : http://localhost:3000 (Adresse renseignée dans le s_auth pour la création de l'appli)


== Tests développés

Afin que tous les tests fonctionnent, il faut commenter deux lignes suivantes :
	#before_filter :must_be_connected, :only => [:create, :destroy] dans le fichier comments_controller.rb (dans le dossier app/controllers)
	#before_filter :must_be_connected, :only => [:create, :new, :destroy] dans le fichier posts_controller.rb (dans le dossier app/controllers)

Sinon il ne passent pas tous.

== Respect des consignes

Même si l'utilisation du blog est loin d'être optimale, l'utilisation de rails et la connexion entre le s_auth et le blog ont été réalisées.







